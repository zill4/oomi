services:
  frontend:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/app
      - /app/node_modules
      - /app/packages/frontend/node_modules
    ports:
      - "5173:5173"
    command: sh -c "cd packages/frontend && npm run dev -- --host"
    depends_on:
      - backend

  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - .:/app
      - /app/node_modules
      - /app/packages/backend/node_modules
      - /app/packages/backend/.turbo
      - /app/packages/backend/dist
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/oomi
      - JWT_SECRET=${JWT_SECRET}
      - WATCHPACK_POLLING=true
    command: sh -c "cd packages/backend && npx prisma generate && npx prisma migrate deploy && npm run dev"
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=oomi
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: